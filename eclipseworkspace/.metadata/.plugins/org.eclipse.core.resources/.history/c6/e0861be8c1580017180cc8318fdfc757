package com.taotao.manage.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;

import com.taotao.manage.pojo.ContentCategory;

@Service
public class ContentCatetgoryService extends BaseService<ContentCategory> {

    public void saveContentCategory(ContentCategory contentCategory) {
        contentCategory.setId(null);
        contentCategory.setIsParent(false);
        contentCategory.setSortOrder(1);
        contentCategory.setStatus(1);
        super.save(contentCategory);
        
        // 判断该节点的父节点的isParent是否为true，否，则需要修改为true
        ContentCategory parent = super.queryById(contentCategory.getParentId());
        if(!parent.getIsParent()){
            parent.setIsParent(true);
            super.update(parent);
        }
        
    }

    public void deleteAll(ContentCategory contentCategory) {
        List<Object> ids = new ArrayList<Object>();
        ids.add(contentCategory.getId());
        
        // 递归查找该节点下的所有子节点id
        this.findAllSubNode(ids, contentCategory.getId());
        
        super.deleteByIds(ids, ContentCategory.class, "id");
    }

    private void findAllSubNode(List<Object> ids, Long pid){
        ContentCategory record = new ContentCategory();
        record.setParentId(pid);
        List<ContentCategory> list = super.queryListByWhere(record);
        for (ContentCategory contentCategory : list) {
            ids.add(contentCategory.getId());
            // 判断该节点是否为父节点，如果是，继续调用该方法查找子节点
            if(contentCategory.getIsParent()){
                // 开始递归
                findAllSubNode(ids, contentCategory.getId());
            }
        }
    }
    
}
